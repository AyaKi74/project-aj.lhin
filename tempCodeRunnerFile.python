import tkinter as tk
import sqlite3

class ButtonCounterApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Button Counter App")

        # สร้างฐานข้อมูล SQLite
        conn = sqlite3.connect(r'"C:\Users\kamit\Downloads\GAYSHABU.db"')
        cursor = conn.cursor()

        # ดึงข้อมูลจากฐานข้อมูล โดยกำหนด LIMIT เพื่อดึงแถวที่ 4 ขึ้นไป
        cursor.execute("SELECT Menu FROM Menu LIMIT -1 OFFSET 3")
        data = cursor.fetchall()
        
        self.button_counts = {row[0]: 0 for row in data}

        self.create_buttons()
        self.create_labels()
        self.create_reset_button()

    def create_buttons(self):
        button_coords = {
            "Menu 1": (50, 50),
            "Menu 2": (200, 50),
            "Menu 3": (50, 150),
            "Menu 4": (200, 150),
        }

        for button_name in self.button_counts.keys():
            x, y = button_coords.get(button_name, (0, 0))
            button = tk.Button(self.root, text=button_name, command=lambda name=button_name: self.update_count(name))
            button.place(x=x, y=y)  # Change 'pack' to 'place' here


    def create_labels(self):
        self.labels = {}
        for text, count in self.button_counts.items():
            label = tk.Label(self.root, text=f"{text} x {count}")
            label.pack(pady=5)
            self.labels[text] = label

    def create_reset_button(self):
        reset_button = tk.Button(self.root, text="Reset Counts", command=self.reset_counts)
        reset_button.pack(pady=10)

    def update_count(self, button_name):
        self.button_counts[button_name] += 1
        self.labels[button_name].config(text=f"{button_name} {self.button_counts[button_name]}x")

    def reset_counts(self):
        for button_name in self.button_counts.keys():
            self.button_counts[button_name] = 0
            self.labels[button_name].config(text=f"{button_name} {self.button_counts[button_name]}x")

if __name__ == "__main__":
    root = tk.Tk()
    app = ButtonCounterApp(root)
    root.mainloop()